from .. import Provider as AddressProvider
from _typeshed import Incomplete

ALPHABET: Incomplete

class Provider(AddressProvider):
    building_suffixes: Incomplete
    road_suffixes: Incomplete
    town_suffixes: Incomplete
    postcode_formats: Incomplete
    new_postal_code_formats: Incomplete
    metropolitan_cities: Incomplete
    provinces: Incomplete
    cities: Incomplete
    road_names: Incomplete
    boroughs: Incomplete
    countries: Incomplete
    building_dongs: Incomplete
    land_numbers: Incomplete
    road_numbers: Incomplete
    town_formats: Incomplete
    building_name_formats: Incomplete
    address_detail_formats: Incomplete
    road_formats: Incomplete
    road_address_formats: Incomplete
    land_address_formats: Incomplete
    city_suffixes: Incomplete
    street_suffixes = road_suffixes
    street_name_formats: Incomplete
    street_address_formats = road_address_formats
    address_formats = road_address_formats
    def land_number(self) -> str: ...
    def land_address(self) -> str: ...
    def road_number(self) -> str: ...
    def road_address(self) -> str: ...
    def address_detail(self) -> str: ...
    def road(self) -> str: ...
    def road_name(self) -> str: ...
    def road_suffix(self) -> str: ...
    def metropolitan_city(self) -> str: ...
    def administrative_unit(self) -> str: ...
    province = administrative_unit
    def city(self) -> str: ...
    def borough(self) -> str: ...
    def town(self) -> str: ...
    def town_suffix(self) -> str: ...
    def building_name(self) -> str: ...
    def building_suffix(self) -> str: ...
    def building_dong(self) -> str: ...
    def old_postal_code(self) -> str: ...
    def postcode(self) -> str: ...
    def postal_code(self) -> str: ...
