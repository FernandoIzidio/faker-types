from ..en import Provider as AddressProvider
from _typeshed import Incomplete
from typing import Optional

class Provider(AddressProvider):
    city_prefixes: Incomplete
    city_suffixes: Incomplete
    building_number_formats: Incomplete
    street_suffixes: Incomplete
    postcode_formats: Incomplete
    states: Incomplete
    states_abbr: Incomplete
    states_postcode: Incomplete
    territories_abbr: Incomplete
    freely_associated_states_abbr: Incomplete
    known_usps_abbr: Incomplete
    military_state_abbr: Incomplete
    military_ship_prefix: Incomplete
    military_apo_format: str
    military_dpo_format: str
    city_formats: Incomplete
    street_name_formats: Incomplete
    street_address_formats: Incomplete
    address_formats: Incomplete
    secondary_address_formats: Incomplete
    def city_prefix(self) -> str: ...
    def secondary_address(self) -> str: ...
    def administrative_unit(self) -> str: ...
    state = administrative_unit
    def state_abbr(self, include_territories: bool = True, include_freely_associated_states: bool = True) -> str: ...
    def postcode(self) -> str: ...
    def zipcode_plus4(self) -> str: ...
    def postcode_in_state(self, state_abbr: Optional[str] = None) -> str: ...
    def military_ship(self) -> str: ...
    def military_state(self) -> str: ...
    def military_apo(self) -> str: ...
    def military_dpo(self) -> str: ...
    def zipcode(self) -> str: ...
    def zipcode_in_state(self, state_abbr: Optional[str] = None) -> str: ...
    def postalcode(self) -> str: ...
    def postalcode_in_state(self, state_abbr: Optional[str] = None) -> str: ...
    def postalcode_plus4(self) -> str: ...
