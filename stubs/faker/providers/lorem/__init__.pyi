from .. import BaseProvider as BaseProvider
from typing import List, Optional, Sequence

localized: bool
default_locale: str

class Provider(BaseProvider):
    word_connector: str
    sentence_punctuation: str
    def words(self, nb: int = 3, part_of_speech: Optional[str] = None, ext_word_list: Optional[Sequence[str]] = None, unique: bool = False) -> List[str]: ...
    def word(self, part_of_speech: Optional[str] = None, ext_word_list: Optional[Sequence[str]] = None) -> str: ...
    def sentence(self, nb_words: int = 6, variable_nb_words: bool = True, ext_word_list: Optional[Sequence[str]] = None) -> str: ...
    def sentences(self, nb: int = 3, ext_word_list: Optional[Sequence[str]] = None) -> List[str]: ...
    def paragraph(self, nb_sentences: int = 3, variable_nb_sentences: bool = True, ext_word_list: Optional[Sequence[str]] = None) -> str: ...
    def paragraphs(self, nb: int = 3, ext_word_list: Optional[Sequence[str]] = None) -> List[str]: ...
    def text(self, max_nb_chars: int = 200, ext_word_list: Optional[Sequence[str]] = None) -> str: ...
    def texts(self, nb_texts: int = 3, max_nb_chars: int = 200, ext_word_list: Optional[Sequence[str]] = None) -> List[str]: ...
